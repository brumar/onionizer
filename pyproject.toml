[project]
name = "onionizer"
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = []
dynamic = ["version"]
description = "A Python package to add middlewares to any function"
python = ">=3.7"
readme = "README.md"
keywords = [
  'decorator',
  'middleware',
]
authors = [
  { name = "bruno", email = "martin.bruno.mail@gmail.com" },
]
license = "MIT"
[project.urls]
"Source code" = "https://github.com/brumar/onionizer"
[project.optional-dependencies]
dev = [
  "pre-commit",
  "black",
  "mkdocs==1.4.2",
  "ruff==0.0.260"
]

[dependencies]

[tool.hatch.envs.default]
extra-dependencies = [
  "pytest==7",
  'pytest-cov',
  "nox==2022.11.21",
  'mutmut==2.4.3',
]


[tool.hatch.build.targets.sdist]
exclude = [
  "/.pytest_cache",
  "/docs",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["onionizer/onionizer"]


[tool.hatch.version]
path = "onionizer/onionizer/__about__.py"

[tool.hatch.envs.default.scripts]
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=onionizer --cov=tests {args}"
no-cov = "cov --no-cov {args}"

[[tool.hatch.envs.test.matrix]]
python = ["37", "38", "39", "310", "311"]

[tool.coverage.run]
branch = true
parallel = true
omit = [
  "onionizer/__about__.py",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
[tool.mutmut]
paths_to_mutate='/home/bruno/onionlib/onionizer/onionizer/'
tests_dir='/home/bruno/onionlib/onionizer/tests/'
